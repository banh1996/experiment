{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #ifndef TREASUREMAP_H\
#define TREASUREMAP_H\
#include <fstream> \
#include <string>\
\
 \
class TreasureMap						// Represents TreasureMap class' data and function members\
\{ \
public: \
	TreasureMap(std::ifstream&);		// Constructor: takes file object and reads treasure map from file\
	void PrintMap();					// Displays the treasure map and its state\
	void FindTreasure(int, int, bool&);	// Recursive function that finds the treasure (ints: row, then column)\
private: \
	char tmap[10][10];					// 2D array of treasure map - outer columns and rows not traversable\
	int maxRows; 						// Maximum number of rows in play area - excludes boundaries\
	int maxCols; 						// Maximum number of columns in play area - excludes boundaries\
	std::string xplor;					// 4-element string dictating order of map exploration (see specifications)\
	std::pair<int,int> getMove(char);	// returns a pair (row, then column offset from current cell) \
\};\
\
#endif\
}