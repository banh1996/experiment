static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 12345
      traffic_direction: INBOUND
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                generate_request_id: true
                tracing:
                  provider:
                    name: envoy.tracers.dynamic_ot
                    typed_config:
                      "@type": type.googleapis.com/envoy.config.trace.v3.DynamicOtConfig
                      library: /usr/local/lib/libjaegertracing_plugin.so
                      config:
                        service_name: front_proxy
                        sampler:
                          type: const
                          param: 1
                        reporter:
                          localAgentHostPort: jaeger:6831
                        headers:
                          jaegerDebugHeader: jaeger-debug-id
                          jaegerBaggageHeader: jaeger-baggage
                          traceBaggageHeaderPrefix: uberctx-
                        baggage_restrictions:
                          denyBaggageOnInitializationFailure: false
                          hostPort: ""
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: example_route
                  virtual_hosts:
                    - name: front_proxy
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: example_service
                          decorator:
                            operation: example_operation
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config: {}
                use_remote_address: true
  clusters:
    - name: example_service
      connect_timeout: 0.250s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: example_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: example_service
                      port_value: 5678
admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
