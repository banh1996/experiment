1. (10 points) What is the purpose of interrupts? What is a trap? Can traps be generated intentionally by a user program? If so, for what purpose?
Answer: CPU has a limit core, interrupts to notify to CPU temporarily needs to pause current process and handle works that comming like I/O, timer, clicking a mouse, printing....
Trap to capture an unexpected event like breakpoint, invalid memory,...
Trap can be generated by a user program when they need to capture a specific event like math error.

2. (10 points) Describe the dual-mode operation of CPU. What is the reason to distinguish between the two modes?
Answer: There are two separate modes:
- kernel mode: it refers to memory access, system call,...
- user mode: CPU is limited to unprivileged instructions and specified memory.
The reason to distinguish between the two modes is to OS protects itself from unknown applications. Only access hardware in kernel mode, and it has limited capability to excute in user mode.

3. (10 points) Which of the following instructions should be privileged?
a. Set value of timer
b. Read the clock
c. Clear memory
d. Issue a trap instruction
e. Turn off interrupts
f. Put the CPU in kernel mode
g. Access I/O device
Answer: a, c, e, f, g, h

4. (10 points) A computer has a CPU that executes at 1GHz (1 billion cycles per second).

The data sheet for a SPI (Serial Peripheral Interface) device controller says the maximum transfer speed is 100Mbps (100 million bits per second) and the maximum buffer size is 4096 bytes. A high-frequency 6-axis accelerometer/gyroscope sensor is connected by an external cable to the SPI controller and sends a 20 byte data packet every 10 Î¼s. Every time a complete data packet is received by the controller it signals an interrupt to the CPU.

A device driver has been written for the SPI controller, it has an ISR (interrupt service routine, aka interrupt handler) that can transfer a 20 byte data packet into main memory for later processing in about 100 CPU cycles.

What percentage of CPU cycles will be used transferring data from the controller to main memory? Your answer should be in the form of a percentage (e.g. 20% of CPU cycles).

Answer: 6*100000*100/1000000000 = 6%

5. (10 points) Three programs are serviced in a multiprogramming system. Program 1 contains 50ms of computation followed by 100ms of I/O on device 1. Program 2 contains 20ms of computation followed by 50ms of I/O on device 1. Program 3 contains 50ms of computation followed by 100ms I/O on device 2. How long it will take to complete all three programs? Draw a diagram similar to the one given in the lecture notes to show the operation of the three programs. (A device can service one I/O request at a time.)

Answer: 

      50ms           100ms
P1 |__________|...................|                             _____: CPU busy
                                                                .....: I/O device busy
              20ms                     50ms
P2            |____|              |..........|

                      50ms           100ms
P3                 |__________|....................|

total time: 220ms

6. (10 points) Describe why DMA is considered a more efficient mechanism for performing I/O than interrupt-driven I/O.

Answer: With ISR, when CPU wants to get data from IO device, it will send a request via bus and wait for response, it takes a lot of time for waiting and wastes CPU resource. so, DMA can solve this problem by transfering data to a buffer, when CPU wants to get data, it sends a request, DMA receives messages and interrupt to CPU each time data is ready, then CPU can get that IO data from buffer of DMA.

7. (10 points) Describe three general methods for passing parameters to the operating system.
- Registers: Parameter passing directly through registers.
- Block: Parameters are stored in a block and the address of the block is passed in a register.
- Stack: Parameters can be pushed onto or popped off a stack by program.
